#!/usr/bin/env node
/**
 * BalanceProgram.start
 *
 * @param config
 * ETHNode: {
 *  chain: 'ETH',
 *  host: 'localhost',
 *  rpcPort: '8545',
 *  protocol: 'http',
 *  tokens : {
 *    GUSD: {
 *      tokenContractAddress: '0xd0683a2f4e9ecc9ac6bb41090b4269f7cacdd5d4',
 *      type: 'ERC20'
 *    },
 *    USDC: {
 *      tokenContractAddress: '0xc92e381c387edbfd2e2112f3054896dd20ac3d31',
 *      type: 'ERC20'
 *    }
 *  }
 *}
 */
const BalanceProgram = {
  start: (program) => {
    const CryptoRPC = require('../lib');
    const {
      currency,
      address,
      host,
      port,
      user,
      password,
      chain,
      protocol,
      rpcUser,
      rpcPass,
      rpcPort,
      token,
    } = program;

    let rpcs = new CryptoRPC({[chain]: {
      chain,
      host,
      rpcPort: port || rpcPort,
      rpcUser: user || rpcUser,
      rpcPass: password || rpcPass,
      protocol,
      token,
    }});
    return rpcs.getBalance({currency, address});
  }
};

if (require.main === module) {
  const params = require('./args');
  BalanceProgram.start(params)
    .then(balance => global.console.log(balance))
    .catch(err => console.error(err));
}


module.exports = BalanceProgram;
